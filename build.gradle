buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.sun.activation:jakarta.activation:1.2.2'
    }
}

plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "groovy"
    id "application"
    id 'org.kordamp.gradle.base' version '0.33.0'
    id 'org.kordamp.gradle.oci' version '0.4.0'
}

version "0.1"
group "codes.recursive"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut:micronaut-inject-groovy:$micronautVersion"
    testImplementation("org.spockframework:spock-core")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testCompile "io.micronaut.test:micronaut-test-spock"
}

test.classpath += configurations.developmentOnly

mainClassName = "codes.recursive.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
/* default project properties to keep intellij from annoying me with warnings */
if(! hasProperty("publicKeyFile")){
    ext.publicKeyFile=""
}
if(! hasProperty("userDataFile")){
    ext.userDataFile=""
}
def step01 = tasks.register('step01', org.kordamp.gradle.plugin.oci.tasks.instance.SetupInstanceTask) {
    verbose       = true
    image         = 'java-11-custom-image'
    shape         = 'VM.Standard2.1'
    publicKeyFile = file("${project.publicKeyFile}")
    userDataFile  = file("${project.userDataFile}")
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
