plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "groovy"
    id "application"
}

version "0.1"
group "codes.recursive"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut:micronaut-inject-groovy:$micronautVersion"
    testImplementation("org.spockframework:spock-core")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testCompile "io.micronaut.test:micronaut-test-spock"

    compile "io.micronaut.configuration:micronaut-liquibase"
    /* override and get the latest liquibase */
    compile 'org.liquibase:liquibase-core:3.8.8'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'

    annotationProcessor 'io.micronaut.data:micronaut-data-processor:1.0.2'
    compile 'io.micronaut.data:micronaut-data-jdbc:1.0.2'
    compile group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'
    runtime 'io.micronaut.configuration:micronaut-jdbc-tomcat'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.2'

    testCompile "org.testcontainers:spock:1.13.0"
    testImplementation "org.testcontainers:oracle-xe:1.13.0"
}

test.classpath += configurations.developmentOnly

mainClassName = "codes.recursive.Application"

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
